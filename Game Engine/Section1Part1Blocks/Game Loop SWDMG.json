[{"code":"}public class GameLoop extends Thread{\n\tpublic static final double MAX_UPS \u003d %1$s;\n\tprivate static final double UPS_PERIOD \u003d 1E+3/MAX_UPS;\n\tpublic Game game;\n\tpublic final SurfaceHolder surfaceHolder;\n\t\n\tprivate boolean isRunning \u003d false;\n\tpublic double averageFPS;\n\tpublic long startTime;\n\t\n\tpublic GameLoop(Game game, SurfaceHolder surfaceHolder) {\n\t\tthis.game \u003d game;\n\t\tthis.surfaceHolder \u003d surfaceHolder;\n\t}\n\tpublic double getAverageFPS() {\n\t\treturn averageFPS;\n\t}\n\t\n\tpublic void startLoop() {\n\t\tisRunning \u003d true;\n\t\tstart();\n\t}\n\t@Override\n\tpublic void run() {\n\t\tsuper.run();\n\t\t// Declare time and cycle count variables\n\t\tint updateCount \u003d 0;\n\t\tint frameCount \u003d 0;\n\t\tlong elapsedTime;\n\t\tlong sleepTime;\n\t\t// Game loop\n\t\tCanvas canvas \u003d null;\n\t\tstartTime \u003d System.currentTimeMillis();\n\t\twhile(isRunning) {\n\t\t\t// Try to update and render game\n\t\t\ttry {\n\t\t\t\t//canvas \u003d surfaceHolder.lockCanvas();\n\t\t\t\tcanvas \u003d surfaceHolder.lockHardwareCanvas();\n\t\t\t\tsynchronized (surfaceHolder) {\n\t\t\t\t\tgame.update();\n\t\t\t\t\tupdateCount++;\n\t\t\t\t\tgame.draw(canvas);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t} catch (IllegalArgumentException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t} finally {\n\t\t\t\tif(canvas !\u003d null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsurfaceHolder.unlockCanvasAndPost(canvas);\n\t\t\t\t\t\tframeCount++;\n\t\t\t\t\t} catch(Exception e) {\n\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Pause game loop to not exceed target UPS\n\t\t\telapsedTime \u003d System.currentTimeMillis() - startTime;\n\t\t\tsleepTime \u003d (long) (updateCount*UPS_PERIOD - elapsedTime);\n\t\t\tif(sleepTime \u003e 0) {\n\t\t\t\ttry {\n\t\t\t\t\tsleep(sleepTime);\n\t\t\t\t\t\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Skip frames to keep up with target UPS\n\t\t\twhile(sleepTime \u003c 0 \u0026\u0026 updateCount \u003c MAX_UPS-1) {\n\t\t\t\tgame.update();\n\t\t\t\tupdateCount++;\n\t\t\t\telapsedTime \u003d System.currentTimeMillis() - startTime;\n\t\t\t\tsleepTime \u003d (long) (updateCount*UPS_PERIOD - elapsedTime);\n\t\t\t}\n\t\t\t// Calculates and shows the FPS (slows down gameplay when active)\n\t\t\t//if (game.showFPS \u003d\u003d false) {\n\t\t\telapsedTime \u003d System.currentTimeMillis() - startTime;\n\t\t\tif (elapsedTime \u003e\u003d 1000) {\n\t\t\t\t\n\t\t\t\taverageFPS \u003d frameCount / (1E-3 * elapsedTime);\n\t\t\t\tupdateCount \u003d 0;\n\t\t\t\tframeCount \u003d 0;\n\t\t\t\tstartTime \u003d System.currentTimeMillis();\n\t\t\t}\n\t\t\t// }\n\t\t}\n\t}\n\t\n\t\n\tpublic void stopLoop() {\n\t\tisRunning \u003d false;\n\t\ttry {\n\t\t\tjoin();\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n","color":"#FFE91E63","name":"Setup Game Loop","typeName":"","palette":"46","type":" ","spec":"Setup Game Loop Set MAX FPS %d "},{"code":"gameLoop.averageFPS","color":"#FFE91E63","name":"Show FPS","typeName":"","palette":"46","type":"d","spec":"Show FPS"},{"code":"gameLoop.stopLoop();","color":"#FFE91E63","name":"Stop GameLoop","typeName":"","palette":"46","type":" ","spec":"Stop Game Loop"}]